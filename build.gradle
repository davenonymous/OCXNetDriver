buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
//Only edit below this line, the above code adds and enables the nessasary things for Forge to be setup.

file "build.properties" withReader {
    def prop = new Properties()
    prop.load(it)
    ext.config = new ConfigSlurper().parse prop
}

version = "${config.mod.version}"
group= "org.dave.ocxnetdriver" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "ocxnetdriver"

sourceCompatibility = targetCompatibility = "1.8" // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = "1.8"
}

minecraft {
    version = "${config.minecraft.version}-${config.forge.version}"
    runDir = "run"

    mappings = "snapshot_20171003"
}

repositories {
    maven { // JEI
        name "Progwml Repo"
        url "http://dvs1.progwml6.com/files/maven"
    }

    maven { // TheOneProbe
        name 'tterrag maven'
        url "http://maven.tterrag.com/"
    }

    maven {
        name = "oc"
        url = "http://maven.cil.li/"
    }

    maven {
        name = "mcjty"
        url = "http://maven.k-4u.nl"
    }
}

dependencies {
    deobfCompile "mezz.jei:jei_${config.minecraft.version}:${config.jei.version}:api"
    runtime "mezz.jei:jei_${config.minecraft.version}:${config.jei.version}"

    compile "li.cil.oc:OpenComputers:MC${config.minecraft.version}-${config.oc.version}"

    compile "com.github.mcjty:xnet:${config.xnet.version}"
    compile "com.github.mcjty:mcjtylib:${config.mcjtylib.version}"
}

allprojects {
    if (System.getenv("TRAVIS") != null) {
        def tag = System.getenv("TRAVIS_TAG");
        if (tag != null && !tag.isEmpty() && tag.contains("release")) {
            project.ext.releaseType = "release"
        } else {
            version += "-b${System.getenv("TRAVIS_BUILD_NUMBER")}"
            project.ext.releaseType = "beta"
        }
    }
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
